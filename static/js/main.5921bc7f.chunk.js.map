{"version":3,"sources":["components/Navbar.jsx","components/Home.jsx","forms/textInput.jsx","services/authService.js","store/actions/actionCreators.js","store/actions/actionTypes.js","forms/LoginForm.jsx","components/Login.jsx","components/Friends.jsx","components/Logout.jsx","services/protectedRoute.jsx","components/NotFound.jsx","forms/FriendsForm.jsx","components/UpdateFriends.jsx","App.js","serviceWorker.js","store/reducers/reducer.js","store/reducers/index.js","index.js"],"names":["connect","loggedIn","className","role","aria-label","to","aria-expanded","data-target","aria-hidden","activeClassName","exact","Home","MyTextInput","label","props","useField","field","meta","touched","error","getToken","localStorage","getItem","setToken","payload","setItem","removeToken","removeItem","axiosAuth","token","axios","create","baseURL","headers","Authorization","fetchSuccess","data","type","fetchError","dispatch","login","credentials","a","async","post","location","history","authService","initialValues","username","password","validationSchema","Yup","required","min","onSubmit","values","setSubmitting","setErrors","setStatus","resetForm","success","replace","state","from","pathname","submit","message","name","placeholder","Login","loading","friends","getFriends","id","get","then","res","console","log","catch","fetchDelete","getState","originalState","newState","filter","delete","match","useEffect","params","style","marginBottom","max","map","friend","index","key","age","email","title","onClick","logout","ProtectedRoute","path","Component","component","render","rest","auth","NotFound","addFriends","updateFriends","put","users","updateRequest","useState","updateMsg","friendsCopy","Date","now","undefined","moreThan","UpdateFriends","App","Friends","Logout","Boolean","window","hostname","initialState","updating","reducer","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5921bc7f.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nfunction Navbar({ loggedIn }) {\n  return (\n    <>\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <Link to=\"/\" className=\"navbar-item has-text-primary\">\n              FRIENDS APP\n            </Link>\n\n            <div\n              role=\"button\"\n              className=\"navbar-burger burger\"\n              aria-label=\"menu\"\n              aria-expanded=\"false\"\n              data-target=\"navbarBasicExample\"\n            >\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n            </div>\n          </div>\n\n          <div className=\"navbar-menu\">\n            <div className=\"navbar-start\">\n              <NavLink\n                to=\"/\"\n                className=\"navbar-item\"\n                activeClassName=\"navlink-active\"\n                exact\n              >\n                Home\n              </NavLink>\n              <NavLink\n                to=\"/friends\"\n                className=\"navbar-item\"\n                activeClassName=\"navlink-active\"\n                exact\n              >\n                Friends\n              </NavLink>\n            </div>\n\n            <div className=\"navbar-end\">\n              <div className=\"navbar-item\">\n                <div className=\"buttons\">\n                  <NavLink\n                    to={loggedIn ? \"/logout\" : \"/login\"}\n                    className={\n                      loggedIn ? \"button is-danger\" : \"button is-primary\"\n                    }\n                  >\n                    {loggedIn ? \"Logout\" : \"Login\"}\n                  </NavLink>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nconst mapStateToProps = ({ loggedIn }) => ({\n  loggedIn\n});\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\n\nfunction Home() {\n  return (\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"card-header\">\n          <h1 className=\"title is-3 has-text-primary\">Home</h1>\n        </div>\n        <div className=\"card-content\">\n          <h5 className=\"title is-5 has-text-primary\">What did I use?</h5>\n          <ul>\n            <li>React CRUD App</li>\n            <li>Redux for State management</li>\n            <li>Redux Thunk for async state</li>\n            <li>Axios for http calls</li>\n            <li>React Router</li>\n            <li>Formik Forms with Yup Validation</li>\n            <li>Node REST api</li>\n            <li>Bulma CSS Framework</li>\n          </ul>\n        </div>\n        <div className=\"card-content\">\n          <h5 className=\"title is-5 has-text-primary\">Instructions</h5>\n          <ol>\n            <li>\n              Add a route for a login page and build out a simple login form\n              with username and password inputs and a submit button (design this\n              however you would like).\n            </li>\n            <li>\n              The login function should save the returned token to localStorage.\n              You can setup isLoading state in your Login component, and show a\n              spinner on your form or in your button while the login request is\n              happening.\n            </li>\n            <li>\n              When the request returns, save the token to localStorage, then use\n              the history object in your Login component to navigate your user\n              to your FriendsList route\n            </li>\n            <li>\n              Create a PrivateRoute component to protect your other routes. It\n              should check localStorage for a token, and redirect the user to\n              your login route if there is not a token.\n            </li>\n            <li>\n              Create a protected route for your friends list. Remember, if the\n              user isn't logged in, navigating to this protected route will\n              redirect them to the login page.\n            </li>\n            <li>\n              In your FriendsList component, rendered with ProtectedRoute, you\n              will create a list of your friends that you get from the API.\n            </li>\n            <li>Adding New Friends</li>\n            <li>\n              In the requirements for this project, we implemented a login POST\n              operation, a GET operation, and a \"add friend\" POST operation. Add\n              two more functions, one for making a PUT request, and the other\n              for making a DELETE request.\n            </li>\n            <li>\n              Style the friends list and the input field and make everything\n              look nice.\n            </li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { useField } from \"formik\";\n\nconst MyTextInput = ({ label, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and also replace ErrorMessage entirely.\n  const [field, meta] = useField(props);\n  return (\n    <div className=\"field\">\n      <div className=\"control\">\n        {/* <label htmlFor={props.id || props.name}>{label}</label> */}\n        <input\n          className={meta.touched && meta.error ? \"input is-danger\" : \"input\"}\n          {...field}\n          {...props}\n        />\n        {meta.touched && meta.error ? (\n          <div className=\"error has-text-danger\">{meta.error}</div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default MyTextInput;\n","import axios from \"axios\";\n\nexport const apiEndpoint = \"http://localhost:5000/api\";\n\n// GET TOKEN FROM LOCALSTORAGE\nexport const getToken = () => {\n  const token = localStorage.getItem(\"token\");\n  return token;\n};\n\n// SET TOKEN FROM LOCALSTORAGE\nexport const setToken = payload => {\n  return localStorage.setItem(\"token\", payload);\n};\n\n// REMOVE TOKEN FROM LOCALSTORAGE\nexport const removeToken = () => {\n  return localStorage.removeItem(\"token\");\n};\n\n// SET HEADERS ON AXIOS REQUEST\nexport const axiosAuth = () => {\n  const token = getToken();\n\n  return axios.create({\n    baseURL: apiEndpoint,\n    headers: {\n      Authorization: token\n    }\n  });\n};\n\nexport default {\n  getToken,\n  setToken,\n  removeToken,\n  axiosAuth\n};\n","import axios from \"axios\";\nimport * as actionType from \"./actionTypes\";\nimport {\n  axiosAuth,\n  setToken,\n  removeToken,\n  apiEndpoint\n} from \"../../services/authService\";\n\nexport const fetchRequest = () => {\n  return {\n    type: actionType.FETCH_REQUEST\n  };\n};\n\nexport const fetchSuccess = data => {\n  return {\n    type: actionType.FETCH_SUCCESS,\n    payload: data\n  };\n};\n\nexport const fetchError = error => {\n  return {\n    type: actionType.FETCH_ERROR,\n    payload: error\n  };\n};\n\nexport const toggleAuth = () => {\n  return {\n    type: actionType.TOGGLE_AUTH\n  };\n};\n\nexport const login = credentials => {\n  return async dispatch => {\n    dispatch(fetchRequest());\n\n    try {\n      const { data } = await axios.post(`${apiEndpoint}/login`, credentials);\n      setToken(data.payload);\n      dispatch(toggleAuth());\n    } catch (error) {\n      dispatch(fetchError(error));\n    }\n  };\n};\n\nexport const getFriends = id => {\n  return dispatch => {\n    dispatch(fetchRequest(id));\n\n    axiosAuth()\n      .get(id ? `/friends/${id}` : `/friends`)\n      // .get(`/friends/`)\n      .then(res => {\n        dispatch(fetchSuccess(id ? [res.data] : res.data));\n        console.log(res);\n      })\n      .catch(error => {\n        console.log(\"ERROR\", error.message);\n        dispatch(fetchError(error.message));\n      });\n  };\n};\n\nexport const logout = () => {\n  return dispatch => {\n    dispatch(fetchRequest());\n\n    try {\n      removeToken();\n      dispatch(toggleAuth());\n    } catch (error) {\n      dispatch(fetchError(error));\n    }\n  };\n};\n\n// ADD\nexport const addFriends = payload => {\n  return dispatch => {\n    dispatch(fetchRequest());\n\n    axiosAuth()\n      .post(`/friends`, payload)\n      .then(res => {\n        console.log(\"ADD\", res);\n        // dispatch(fetchAdd(payload))\n      })\n      .catch(error => dispatch(fetchError(error.message)));\n  };\n};\n\n// DELETE\n\nexport const deleteError = (data, error) => {\n  return {\n    type: actionType.DELETE_ERROR,\n    payload: { data, error }\n  };\n};\n\nexport const fetchDelete = id => {\n  return async (dispatch, getState) => {\n    // REMOVE FROM STATE\n\n    // 1. Make copy of state\n    await dispatch(fetchRequest());\n    const originalState = [...getState().data];\n\n    // 2. Filter through specific user\n    const newState = [...getState().data].filter(data => data.id !== id);\n\n    // 4. Update State\n    await dispatch(fetchSuccess(newState));\n\n    // REMOVE FROM SERVER\n\n    // 1. axios.delete call with new state\n    // 2. if that doesnt work, revert back to copy of OG state\n    try {\n      await axiosAuth().delete(`/friends/${id}`);\n    } catch (error) {\n      await dispatch(deleteError(originalState, error.message));\n    }\n  };\n};\n\n// UPDATE\nexport const updateRequest = (id, data) => {\n  return async dispatch => {\n    await dispatch(fetchRequest());\n\n    try {\n      const { data: users } = await axiosAuth().put(`/friends/${id}`, data);\n      dispatch(fetchSuccess(users));\n    } catch (error) {\n      await dispatch(fetchError(error.message));\n    }\n  };\n};\n","export const FETCH_REQUEST = \"FETCH_REQUEST\";\nexport const FETCH_SUCCESS = \"FETCH_SUCCESS\";\nexport const FETCH_ADD = \"FETCH_ADD\";\nexport const FETCH_ERROR = \"FETCH_ERROR\";\nexport const GET_FRIENDS = \"GET_FRIENDS\";\n\nexport const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const TOGGLE_AUTH = \"TOGGLE_AUTH\";\n\nexport const GET_TOKEN = \"GET_TOKEN\";\nexport const SET_TOKEN = \"SET_TOKEN\";\nexport const REMOVE_TOKEN = \"REMOVE_TOKEN\";\n\nexport const DELETE_ERROR = \"DELETE_ERROR\";\n\nexport const UPDATE_REQUEST = \"UPDATE_REQUEST\";\n","import React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport MyTextInput from \"./textInput\";\nimport authService from \"../services/authService\";\nimport { login } from \"../store/actions/actionCreators\";\n\nfunction LoginForm({ location, history, login }) {\n  if (authService.getToken()) return <Redirect to=\"/\" />;\n\n  return (\n    <div className=\"columns is-centered\">\n      <Formik\n        initialValues={{\n          username: \"\",\n          password: \"\"\n        }}\n        validationSchema={Yup.object({\n          username: Yup.string().required(\"Username is Required\"),\n          password: Yup.string()\n            .required(\"Password is Required\")\n            .min(4, \"Password must have at least 4 characters.\")\n        })}\n        onSubmit={async (\n          values,\n          { setSubmitting, setErrors, setStatus, resetForm }\n        ) => {\n          try {\n            //   console.log(values);\n            await login(values);\n            resetForm({});\n            setStatus({ success: true });\n            history.replace(\n              location.state ? location.state.from.pathname : \"/\"\n            );\n            // window.location = state ? state.from.pathname : \"/\";\n          } catch (error) {\n            setStatus({ success: false });\n            setSubmitting(false);\n            setErrors({ submit: error.message });\n          }\n        }}\n      >\n        <Form className=\"card column is-two-fifths\">\n          <div className=\"card-content\">\n            <h1 className=\"title has-text-centered has-text-primary\">Login</h1>\n            <MyTextInput\n              label=\"Username\"\n              name=\"username\"\n              type=\"text\"\n              placeholder=\"Username...\"\n            />\n            <MyTextInput\n              label=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password...\"\n            />\n\n            <button type=\"submit\" className=\"button is-primary\">\n              Submit\n            </button>\n          </div>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  login: credentials => dispatch(login(credentials))\n});\n\nexport default connect(null, mapDispatchToProps)(LoginForm);\n","import React from \"react\";\nimport LoginForm from \"../forms/LoginForm\";\n\nfunction Login(props) {\n  return (\n    <div>\n      <LoginForm {...props} />\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useEffect } from \"react\";\n\nimport { Table, Button } from \"react-bulma-components/dist\";\nimport { getFriends, fetchDelete } from \"../store/actions/actionCreators\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nfunction Friends({ getFriends, friends, match, loading, error, fetchDelete }) {\n  useEffect(() => {\n    getFriends(match.params.id);\n  }, [getFriends, match.params.id]);\n  console.log(\"FRIENDS\", friends);\n  console.log(\"LOADING\", loading);\n\n  return (\n    <>\n      <div>\n        <div className=\"card\">\n          <div className=\"friends-header card-content\">\n            <h1\n              className=\"title is-3 has-text-primary\"\n              style={{ marginBottom: 0 }}\n            >\n              Hello Friends...\n            </h1>\n            <Link to={`/addFriend`}>\n              <Button className=\"button is-primary\">Add Friend</Button>\n            </Link>\n\n            {error && (\n              <>\n                <h2>{error}</h2>\n                <Link to=\"/\">Go Back Home</Link>\n              </>\n            )}\n          </div>\n        </div>\n        <div className=\"card\">\n          <div className=\"card-content\">\n            {loading && (\n              <progress className=\"progress is-small is-primary\" max=\"100\">\n                15%\n              </progress>\n            )}\n            <Table className=\"table is-striped is-hoverable is-fullwidth\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Name</th>\n                  <th>Age</th>\n                  <th>Email</th>\n                  <th>More</th>\n                </tr>\n              </thead>\n              <tbody>\n                {friends.map((friend, index) => {\n                  return (\n                    <tr key={friend.id}>\n                      <td>{index + 1}</td>\n                      <td>{friend.name}</td>\n                      <td>{friend.age}</td>\n                      <td>{friend.email}</td>\n                      <td>\n                        <Link\n                          to={`/addFriend/${friend.id}`}\n                          className=\"has-text-primary\"\n                        >\n                          <i title=\"Update\" className=\"far fa-edit\"></i>\n                        </Link>{\" \"}\n                        |{\" \"}\n                        <Link\n                          to=\"#\"\n                          className=\"table-more-btn has-text-primary\"\n                          onClick={() => fetchDelete(friend.id)}\n                        >\n                          <i title=\"Delete\" className=\"far fa-trash-alt\"></i>\n                        </Link>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  loading: state.loading,\n  friends: state.data,\n  error: state.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getFriends: id => dispatch(getFriends(id)),\n  fetchDelete: id => dispatch(fetchDelete(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Friends);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../store/actions/actionCreators\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction Logout({ logout }) {\n  logout();\n\n  return (\n    <div>\n      <Redirect to=\"/\" />\n    </div>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  logout: () => dispatch(logout())\n});\n\nexport default connect(null, mapDispatchToProps)(Logout);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"./authService\";\n\nfunction ProtectedRoute({ path, component: Component, render, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        console.log(props);\n        if (!auth.getToken())\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location }\n              }}\n            />\n          );\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n}\n\nexport default ProtectedRoute;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NotFound() {\n  return (\n    <div>\n      <h1 className=\"title is-2 has-text-danger\">Page Not Found</h1>\n      <Link to=\"/\" className=\"button is-primary\">\n        Go Back Home\n      </Link>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, { useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport MyTextInput from \"./textInput\";\nimport { addFriends, updateRequest } from \"../store/actions/actionCreators\";\nimport authService from \"../services/authService\";\n\nfunction FriendsForm({\n  location,\n  history,\n  match,\n  addFriends,\n  friends,\n  updateFriends\n}) {\n  const [updateMsg] = useState(match.params.id);\n\n  // If not logged in, page inaccessible\n  if (!authService.getToken()) return <Redirect to=\"/\" />;\n\n  // If updating, filter specific user and use as initial values\n  let friendsCopy = friends.filter(friend => friend.id === +updateMsg);\n\n  return (\n    <div className=\"columns is-centered\">\n      <Formik\n        initialValues={{\n          id: friendsCopy[0] ? friendsCopy[0].id : Date.now(),\n          name: friendsCopy[0] ? friendsCopy[0].name : \"\",\n          age: friendsCopy[0] ? friendsCopy[0].age : undefined,\n          email: friendsCopy[0] ? friendsCopy[0].email : \"\"\n        }}\n        validationSchema={Yup.object({\n          name: Yup.string().required(\"Email is Required\"),\n          age: Yup.number()\n            .required(\"Age is Required\")\n            .moreThan(0.9999, \"Age must be at least 1.\"),\n          email: Yup.string()\n            .required(\"Email is Required.\")\n            .email(\"Input valid email.\")\n            .min(4, \"Minimum 4 characters\")\n        })}\n        onSubmit={(\n          values,\n          { setSubmitting, setErrors, setStatus, resetForm }\n        ) => {\n          try {\n            friendsCopy[0]\n              ? updateFriends(friendsCopy[0].id, values)\n              : addFriends(values);\n            resetForm({});\n            setStatus({ success: true });\n            history.replace(\n              location.state ? location.state.from.pathname : \"/friends\"\n            );\n          } catch (error) {\n            setStatus({ success: false });\n            setSubmitting(false);\n            setErrors({ submit: error.message });\n          }\n        }}\n      >\n        <Form className=\"card column is-two-fifths\">\n          <div className=\"card-content\">\n            <h1 className=\"title has-text-centered has-text-primary\">\n              {updateMsg ? \"Update\" : \"Submit\"}\n            </h1>\n            <MyTextInput\n              label=\"Name\"\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Name...\"\n            />\n            <MyTextInput\n              label=\"Age\"\n              name=\"age\"\n              type=\"text\"\n              placeholder=\"Age...\"\n            />\n            <MyTextInput\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Email...\"\n            />\n\n            <button\n              type=\"button\"\n              onClick={() => history.replace(\"/friends\")}\n              className=\"button is-warning cancel-btn\"\n            >\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"button is-primary\">\n              {friendsCopy[0] ? \"Update\" : \"Submit\"}\n            </button>\n          </div>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  friends: state.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addFriends: values => dispatch(addFriends(values)),\n  updateFriends: (id, values) => dispatch(updateRequest(id, values))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendsForm);\n","import React from \"react\";\nimport FriendsForm from \"../forms/FriendsForm\";\n\nfunction UpdateFriends(props) {\n  return (\n    <div>\n      <FriendsForm {...props} />\n    </div>\n  );\n}\n\nexport default UpdateFriends;\n","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Friends from \"./components/Friends\";\nimport Logout from \"./components/Logout\";\nimport ProtectedRoute from \"./services/protectedRoute\";\nimport NotFound from \"./components/NotFound\";\nimport \"./App.scss\";\nimport UpdateFriends from \"./components/UpdateFriends\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"container\">\n        <Switch>\n          <ProtectedRoute\n            path=\"/addFriend/:id?\"\n            render={props => <UpdateFriends {...props} />}\n          />\n          <ProtectedRoute path=\"/friends/:id?\" component={Friends} />\n          <ProtectedRoute path=\"/friends\" component={Friends} />\n          <Route path=\"/login\" render={props => <Login {...props} />} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/not-found\" component={NotFound} />\n          <Route path=\"/\" exact component={Home} />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionType from \"../actions/actionTypes\";\nimport { getToken } from \"../../services/authService\";\n\nconst initialState = {\n  loading: false,\n  data: [],\n  error: \"\",\n  updating: {},\n  loggedIn: getToken() ? true : false\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.FETCH_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: \"\"\n      };\n    case actionType.FETCH_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        data: action.payload,\n        loggedIn: true\n      };\n    case actionType.FETCH_ADD:\n      return {\n        ...state,\n        loading: false,\n        data: [...state.data, action.payload]\n      };\n    case actionType.DELETE_ERROR:\n      return {\n        ...state,\n        loading: false,\n        data: [...action.payload.data],\n        error: action.payload.error\n      };\n\n    case actionType.FETCH_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n        loggedIn: false\n      };\n    case actionType.UPDATE_REQUEST:\n      return {\n        ...state,\n        updating: action.payload\n      };\n    case actionType.TOGGLE_AUTH:\n      return {\n        ...state,\n        loggedIn: !state.loggedIn\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { store } from \"./store/reducers\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}